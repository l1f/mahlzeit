// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: recipes.sql

package queries

import (
	"context"
)

const getAllRecipesByName = `-- name: GetAllRecipesByName :many
select id, name
from recipes
order by name
`

type GetAllRecipesByNameRow struct {
	ID   int64
	Name string
}

func (q *Queries) GetAllRecipesByName(ctx context.Context) ([]GetAllRecipesByNameRow, error) {
	rows, err := q.db.Query(ctx, getAllRecipesByName)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllRecipesByNameRow
	for rows.Next() {
		var i GetAllRecipesByNameRow
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
